МИНИСТЕРСТВО НАУКИ И ВЫСШЕГО ОБРАЗОВАНИЯ РОССИЙСКОЙ ФЕДЕРАЦИИ

ФЕДЕРАЛЬНОЕ ГОСУДАРСТВЕННОЕ АВТОНОМНОЕ ОБРАЗОВАТЕЛЬНОЕ УЧРЕЖДЕНИЕ ВЫСШЕГО ОБРАЗОВАНИЯ
«НАЦИОНАЛЬНЫЙ ИССЛЕДОВАТЕЛЬСКИЙ ТЕХНОЛОГИЧЕСКИЙ УНИВЕРСИТЕТ «МИСиС»


Институт ИТКН
Кафедра инженерной кибернетики
Направление подготовки: 01.03.04 Прикладная математика
Квалификация (степень): бакалавр
Группа: БПМ-19-4 


ОТЧЕТ
ПО КУРСОВОЙ НАУЧНО-ИССЛЕДОВАТЕЛЬСКОЙ РАБОТЕ
на тему: 
«Разработка приложения на основе машинного обучения “МедСмарт”»
2022 – 2023 уч. год.

		Учащийся:                                                       /    Костромин А. Ю.                  / 
                                                 	                            подпись                                Фамилия И.О.  
                           
		    Оценка:           _________________________ 

                            Дата защиты: 15.05.23.
 
 
                            Руководитель КНИР 	                 / Старший преподаватель кафедры. Пышняк М. О.       / 
 	                                                               подпись     должность, уч., степень. Фамилия И.О.  
 


Москва 2023




Содержание отчета


1. Список используемых сокращений	4
2. Введение	5
2.1 Актуальность работы	5
2.2 Цели и задачи работы.	6
3. Аналитический обзор источников	7
3.1 Общий обзор применения машинного обучения в медицинской диагностике	7
3.1.1 Обзор COVID: Клинические характеристики и текущие методы диагностики	7
3.1.2 Обзор опухолей головного мозга: Клинические характеристики и текущие методы диагностики	8
3.1.3 Обзор рака молочных желез: Клинические характеристики и текущие методы диагностики	9
3.1.4 Обзор болезни Альцгеймера: Клинические характеристики и текущие методы диагностики	10
3.1.5 Обзор диабета: Клинические характеристики и текущие методы диагностики	11
3.1.6 Обзор сердечных заболеваний.  Клинические характеристики и текущие методы диагностики	12
3.2 Архитектура сверточных нейронных сетей	13
3.2.1 Сверточный слой	14
3.2.2 Слой активации	17
3.2.3 Слой подвыборки	20
3.2.4 Полносвязный слой	21
3.2.5 Слой нормализации данных	23
3.2.6 Слой выравнивания данных	24
3.2.7 Cлой прореживания	24
3.3 Алгоритмы оптимизации нейросетей	25
3.3.1 Градиентный спуск	25
3.3.2 Стохастический градиентный спуск	26
3.3.3 Adagrad	26
3.3.4 RMSProp	27
3.3.5 Adam	27
3.3.6 Классификатор на основе случайного леса	28
3.3.7 Математическая модель дерева принятия решений	31
3.3.8 XGBoost	33
4. Содержательная постановка задачи	37
5. Математическая постановка задачи.	38
6. Использование методов и средств информационных технологий	39
7. Проведенные исследования и анализ полученных результатов	40
7.1. Работа с данными	40
7.1.1 Поиск и формирование датасетов	40
7.2 Обучение моделей	40
7.3 Тестирование моделей	41
7.4 Разработка веб-приложения	41
8. Выводы	43
9. Список использованных источников	44
10. Приложения	45





















1. Список используемых сокращений

CNN - convultional neural network (сверточная нейронная сеть);
ML - machine learning (машинное обучение);
SVM - support vector machines (метод опорных векторов);
SMO - Sequential Minimal Optimization (алгоритм последовательной оптимизации);
5. СНС - сверточная нейронная сеть;
6. ADAM - ADAptive Momentum (Адаптивный момент)
7.  API - Application Programming Interface (программный интерфейс)







































2. Введение

2.1 Актуальность работы

В эпоху цифровой трансформации технологии машинного обучения и искусственного интеллекта все более активно интегрируются в различные сферы нашей жизни, включая здравоохранение. Применение этих технологий в медицине открывает новые возможности для улучшения качества и доступности медицинских услуг, что в свою очередь ведет к значительному повышению уровня здравоохранения в целом.

Объектом данной работы является область медицинской информатики, в частности применение машинного обучения и искусственного интеллекта в медицинских приложениях. Предметом исследования является разработка и применение медицинского приложения "Медсмарт", основанного на принципах машинного обучения.

Состояние вопроса на современном этапе свидетельствует о высоком уровне интереса к использованию машинного обучения в области медицинских технологий. Большинство исследований в этой области фокусируются на создании новых алгоритмов и моделей, которые могут быть использованы для анализа медицинских данных и предоставления более точных диагностических решений. Однако, несмотря на значительные успехи, разработка приложений, которые могли бы эффективно использовать эти алгоритмы и модели в реальных условиях, остается сложной задачей.

Исходные данные для разработки приложения "МедСмарт" были получены из нескольких источников, включая открытые медицинские базы данных и результаты собственного исследования. Были использованы современные методы машинного обучения для анализа этих данных и создания моделей, которые могут быть использованы в приложении.

Актуальность темы обусловлена растущей необходимостью в поиске новых подходов к диагностике и лечению болезней, улучшению качества и доступности медицинской помощи. В свете этого, разработка приложения "МедСмарт" на основе машинного обучения представляет собой важный шаг в направлении интеграции новейших технологий в медицинскую практику.

Новизна данной работы заключается в применении современных технологий машинного обучения для создания медицинского приложения. "МедСмарт" представляет собой уникальную платформу, способную обрабатывать и анализировать большие объемы медицинских данных для предоставления точных и оперативных медицинских решений.

В контексте текущих исследований, данная работа связывается с многими другими работами, посвященными применению машинного обучения в медицинской индустрии. Она вносит свой вклад в область медицинской информатики, расширяя понимание возможностей применения машинного обучения в медицинских приложениях.

В результате, данное исследование позволит получить более глубокое понимание процесса разработки медицинских приложений на основе машинного обучения и его потенциального влияния на сферу здравоохранения.

2.2 Цели и задачи работы.

Целью данной работы является разработка веб-приложения “МедСмарт”, которое будет способно диагностировать 7 различных заболеваний при помощи машинного обучения. Веб-приложение будет диагностировать следующие заболевания: Covid, опухоли головного мозга, рак молочных желез, болезнь Альцгеймера, сахарный диабет, пневмонию, сердечные заболевания. 

Чтобы достичь целевого результата, необходимо выполнить ряд задач:
Произвести обзор научной литературы;
Установить тип математической проблемы, которую следует решить для разработки алгоритма функционирования веб-приложения.
Уточнить модели машинного обучения и данные, которые необходимы для решения заданной математической проблемы.
Найти, обработать и подготовить данные для машинного обучения. 
Провести обучение выбранных моделей, настроить подходящие значения гиперпараметров и оценить эффективность их функционирования.
Разработать бакэнд приложения. 
Разработать пользовательский интерфейс. 
Написать фронтэнд приложения. 
Установить приложение на веб-сервер для того чтобы был доступ по сети.
Запустить веб-приложение и оценить его работу. 
































3. Аналитический обзор источников
3.1 Общий обзор применения машинного обучения в медицинской диагностике
Машинное обучение в последние годы привлекло значительное внимание в медицинской сфере, прежде всего в области диагностики заболеваний. Это обусловлено его способностью анализировать большие объемы данных и выявлять сложные взаимосвязи, которые могут оказаться недоступными для традиционных статистических методов.
Основные технологии машинного обучения, используемые в медицинской диагностике, включают сверточные нейронные сети и метод случайных лесов. Сверточные нейронные сети, в особенности, оказались особенно полезными при работе с изображениями, такими как медицинские сканирования, благодаря их способности автоматически выявлять и использовать наиболее важные признаки. Метод случайных лесов, с другой стороны, позволяет эффективно анализировать большое количество переменных и учитывать их взаимосвязи.
Применение машинного обучения в медицинской диагностике включает обнаружение и классификацию заболеваний, предсказание риска заболевания и оптимизацию лечебных стратегий. Все это делает машинное обучение мощным инструментом для улучшения точности диагностики и эффективности медицинского ухода.
Однако, несмотря на эти преимущества, применение машинного обучения в медицинской диагностике также представляет некоторые вызовы. Одним из них является необходимость в больших объемах качественных данных для обучения моделей. Кроме того, важно обеспечить интерпретируемость результатов, чтобы врачи и другие медицинские специалисты могли понять и использовать выводы, полученные с помощью машинного обучения. Наконец, важно учесть этические и юридические вопросы, связанные с использованием данных пациентов и их приватностью.

3.1.1 Обзор COVID: Клинические характеристики и текущие методы диагностики
COVID-19, вызванный коронавирусом SARS-CoV-2, представляет собой системное заболевание, которое впервые было идентифицировано в конце 2019 года и с тех пор стало глобальной пандемией, серьезно затронувшей все сферы общественной жизни. Это заболевание проявляется широким спектром симптомов, включая лихорадку, кашель, утомляемость, потерю обоняния и вкуса, одышку и в некоторых случаях тяжелое респираторное заболевание.
С момента появления COVID-19 было разработано множество методов диагностики. Полимеразная цепная реакция (ПЦР) является наиболее распространенным и надежным методом, используемым для обнаружения активной инфекции. Этот метод основан на амплификации и детекции вирусной РНК и требует специализированных лабораторных условий и обученного персонала. Быстрый тест на антигены, который также может обнаруживать активную инфекцию, представляет собой более простую и более быструю альтернативу, но его чувствительность и специфичность обычно ниже, чем у ПЦР.
Методы диагностики на основе изображений, такие как КТ и рентген грудной клетки, могут быть использованы для оценки степени поражения легких и прогнозирования исхода заболевания. Однако эти методы имеют свои ограничения, включая излучение для пациента, стоимость и доступность, а также сложность интерпретации изображений.
В этом контексте машинное обучение может предложить новые возможности для улучшения диагностики COVID-19. Этот подход может привести к разработке автоматизированных систем, способных анализировать медицинские изображения или другие типы данных, такие как клинические параметры или результаты лабораторных тестов, для предсказания наличия или отсутствия COVID-19, а также для оценки тяжести заболевания или прогнозирования исхода.

3.1.2 Обзор опухолей головного мозга: Клинические характеристики и текущие методы диагностики
Опухоли головного мозга - это сложный и разнообразный класс заболеваний, которые включают в себя широкий спектр типов опухолей, относительно доброкачественных, таких как менингиомы, до агрессивных злокачественных форм, включая глиобластомы. Симптомы могут включать головную боль, нарушения зрения, проблемы с координацией, изменения личности или психического состояния, приступы и другие неврологические проблемы. Однако эти симптомы часто неспецифичны и могут быть вызваны многими другими причинами, что затрудняет диагностику.
Текущие методы диагностики опухолей мозга включают магнитно-резонансную томографию (МРТ), компьютерную томографию (КТ), позитронно-эмиссионную томографию (ПЭТ), а также биопсию для гистологического анализа. МРТ является основным инструментом для визуализации опухолей мозга, позволяя детально изучить их размер, форму, расположение и взаимодействие с окружающими тканями. Однако интерпретация изображений МРТ может быть сложной и требует опыта и знаний. Биопсия предоставляет дополнительную информацию о типе и стадии опухоли, но является инвазивной процедурой и не всегда возможной или безопасной.
В этом контексте применение машинного обучения может значительно облегчить и ускорить диагностику опухолей головного мозга. Сверточные нейронные сети (CNN) и методы случайных лесов могут быть использованы для анализа изображений МРТ, автоматического определения наличия, размера, формы и местоположения опухоли, а также для предсказания ее типа и стадии на основе изображений и других клинических данных. Это может улучшить точность и эффективность диагностики, сократить время на анализ изображений и уменьшить зависимость от индивидуального опыта и субъективных оценок специалистов. Однако, важно отметить, что эти методы машинного обучения должны быть тщательно проверены и валидированы на больших и разнообразных наборах данных, прежде чем они могут быть широко применены в клинической практике. Кроме того, их использование должно быть встроено в более широкий контекст медицинской диагностики, включая клиническую оценку и другие методы исследования.
3.1.3 Обзор рака молочных желез: Клинические характеристики и текущие методы диагностики

Распространенность рака молочной железы ставит его на первое место среди всех видов рака у женщин. Он проявляется через уплотнения в груди, изменение формы груди, втяжение кожи или соска, и нередко сопровождается кровянистыми выделениями из соска.
Для его диагностики существуют различные подходы, включая маммографию, ультразвук, магнитно-резонансную томографию и биопсию. Маммография применяется как основной скрининговый метод, но у женщин с плотными молочными железами она может быть менее чувствительной. Биопсия позволяет установить более точный диагноз, определяя тип и стадию рака.

Вместе с этим, на передний план выходят методы машинного обучения. Использование сверточных нейронных сетей и метода случайных лесов может значительно улучшить точность диагностики. Они способны к анализу изображений маммографии и МРТ, автоматическому выявлению подозрительных областей и оценке вероятности их злокачественности.
Также, эти методы могут применяться для анализа гистологических изображений биопсии, предсказывая возможное течение болезни. Однако, важность их тщательной проверки и валидации не может быть недооценена. Безопасность данных, справедливость и прозрачность принятия решений также являются ключевыми вопросами при использовании алгоритмов машинного обучения в медицинской диагностике.

3.1.4 Обзор болезни Альцгеймера: Клинические характеристики и текущие методы диагностики

Болезнь Альцгеймера – это прогрессирующее нейродегенеративное заболевание, приводящее к деменции. Оно характеризуется постепенной потерей памяти, способностей к обучению, речи и пространственной ориентации. Часто сопровождается изменениями в поведении и личности. Сегодня болезнь Альцгеймера является наиболее распространенной причиной деменции у пожилых людей.
Диагностика болезни Альцгеймера включает медицинский осмотр, нейропсихологическое тестирование, анализ крови, МРТ головного мозга и, в некоторых случаях, пункцию спинномозговой жидкости. Однако диагноз остается сложным из-за отсутствия специфичных биомаркеров и сходства симптомов с другими нейродегенеративными заболеваниями.
В последние годы внимание исследователей привлекают возможности машинного обучения для диагностики болезни Альцгеймера. Применение алгоритмов, таких как сверточные нейронные сети и метод случайных лесов, обещает улучшить точность и раннюю диагностику этого заболевания.
Основываясь на данных МРТ, эти модели могут обучаться распознаванию паттернов, характерных для болезни Альцгеймера. Они также могут анализировать сложные сочетания биомаркеров и других параметров для прогнозирования риска развития болезни.
Однако, несмотря на значительный потенциал, использование машинного обучения для диагностики болезни Альцгеймера еще требует дополнительных исследований. Важно обеспечить точность и надежность таких систем, а также их способность работать с реальными клиническими данными.

3.1.5 Обзор диабета: Клинические характеристики и текущие методы диагностики

Диабет – это хроническое заболевание, при котором организм не может эффективно использовать глюкозу, полученную из пищи. Диабет обычно классифицируется как Тип 1 и Тип 2. При диабете 1-го типа поджелудочная железа не производит достаточное количество инсулина, а при диабете 2-го типа организм не способен эффективно использовать инсулин, который он производит.
Клинические симптомы диабета включают повышенную утомляемость, частые мочеиспускания, постоянную жажду, замедленное заживление ран и инфекций, изменения в зрении и непояснимую потерю веса.
Текущие методы диагностики диабета включают измерение уровня глюкозы в крови натощак, проведение теста на глюкозотолерантность и измерение уровня гликированного гемоглобина (HbA1c). Однако эти тесты могут быть сложными, требуют медицинского наблюдения и не всегда точны.
В этом контексте машинное обучение предлагает новые подходы к диагностике и мониторингу диабета. Сверточные нейронные сети и метод случайных лесов могут использоваться для анализа больших наборов данных, включая клинические данные, данные об образе жизни и генетические данные, чтобы предсказать риск развития диабета или оценить его прогрессию.
Например, некоторые исследования показали, что алгоритмы машинного обучения могут предсказать развитие диабета на основе ряда клинических и демографических данных с высокой точностью. Это может помочь в раннем выявлении заболевания и вовременном начале лечения.
Тем не менее, применение машинного обучения в диагностике диабета все еще находится в стадии развития, и требуется больше исследований для улучшения этих технологий и их интеграции в медицинскую ппрактику. Эффективность такого подхода также будет зависеть от доступности и качества данных, а также от способности алгоритмов машинного обучения обрабатывать сложные и непостоянные шаблоны данных.
В заключение, исходя из обзора литературы и существующих исследований, можно сделать вывод о потенциале и важности машинного обучения в современной диагностике диабета. Это открывает новые горизонты для улучшения качества жизни пациентов с диабетом и может стать ключевым инструментом для прогнозирования и диагностики данного заболевания в будущем.


3.1.6 Обзор сердечных заболеваний.  Клинические характеристики и текущие методы диагностики

В современном медицинском мире сердечно-сосудистые заболевания продолжают оставаться основной причиной смертности и инвалидности на глобальном уровне. Часто они характеризуются сложным ходом и требуют комплексного подхода к диагностике и лечению.
Сегодняшние методы диагностики включают широкий спектр техник, начиная от физического осмотра и заканчивая сложными инвазивными процедурами. Среди них - электрокардиограмма (ЭКГ), УЗИ сердца, коронарография и многие другие. Однако каждый из этих методов имеет свои ограничения и не всегда позволяет достичь точной диагностики.
В это усложненное поле входят методы машинного обучения, предлагая свежие и инновационные подходы к проблеме. Используя алгоритмы, которые могут изучать и обрабатывать большое количество данных, машинное обучение может помочь обнаружить скрытые взаимосвязи и модели в диагностических данных, которые могут быть не доступны для традиционного анализа.
Несмотря на большой потенциал, использование машинного обучения в диагностике сердечно-сосудистых заболеваний все еще находится в стадии активного исследования. Существуют важные вопросы, которые требуют внимания, включая выбор подходящих алгоритмов, сбор и обработка данных, а также этические и правовые вопросы, связанные с использованием искусственного интеллекта в медицине.
В результате, применение машинного обучения в области сердечно-сосудистых заболеваний является перспективным направлением исследований, которое может внести значительный вклад в улучшение качества диагностики и лечения этих заболеваний в будущем.
3.2 Архитектура сверточных нейронных сетей

Сверточная нейронная сеть (Convolutional Neural Network или сокращенно CNN) - это тип нейронных сетей, используемый для обработки изображений, видео и других многомерных данных, которые имеют локальную структуру. Основная идея этого типа нейронных сетей заключается в том, что они используют свойства пространственной связности между пикселями изображения для определения форм, контуров и текстур, которые присутствуют на изображении. Основная особенность данной нейросети заключается в том, что в нем используется слой свертки. Свертка - это процесс применения ядра свертки к картам признаков для выявления определенных шаблонов. Ядро свертки представляет собой матрицу с весами, которая скользит по изображению, попиксельно умножаясь на пиксели изображения, и суммируя результаты. Веса свертки заранее неизвестны, они формируются в процессе обучения методом обратного распространения ошибки. Результат такой операции - это карта признаков, которая хранит информацию о наличии определенных шаблонов на изображении.

Рис 1. Общая схема работы сверточной нейронной сети
Архитектура сверточной нейросети всегда состоит из нескольких слоев. Самые основные из них: 
1. Слой свертки (Convolution Layer) - в этом слое выполняется самый важный шаг - свертка ядром свертки с исходным изображением. 
2. Слой активации (Activation Layer) - после слоя свертки следует слой активации, который применяет нелинейное преобразование к выходу из слоя свертки, чтобы вводить нелинейности в модель. 
3. Слой подвыборки (Pooling Layer) - этот слой уменьшает размер карт признаков, путем уменьшения количества пикселей их усреднением или выбором максимальных значений. 
4. Слой полносвязной нейронной сети (Fully Connected Layer) - этот слой соединяет выходные данные слоев свертки с выходными данными, готовыми для классификации в конечном слое. 
В сверточных нейронных сетях часто используются различные типы слоев, такие как Normalization Layer, Dropout Layer и другие. Эти типы слоев используются для предотвращения переобучения модели и повышения ее производительности. Математически сверточная нейронная сеть состоит из нескольких матричных операций, включая операцию свертки, обратную операцию (как правило - reverse convolution или transposed convolution), матричное умножение и уменьшение размерности. Принципы работы сверточной нейросети включают подачу входных данных в нейронную сеть, последовательное прохождение через слои нейронной сети с использованием операций свертки, уплотнения и матричного умножения, и получение выходных данных сверточной нейросети.
3.2.1 Сверточный слой
Сверточный слой является фундаментальным строительным блоком сверточных нейронных сетей (CNN). Он предназначен для уменьшения объема данных и создания карт признаков. Математический принцип, лежащий в основе сверточного слоя, — это свертка, представляющая собой математическую операцию, объединяющую две функции для получения третьей функции. В сверточной нейронной сети операция свертки применяется к входным данным и обучаемым весам, называемым ядрами или фильтрами. Операция свертки включает скольжение ядра по входным данным и вычисление скалярного произведения между ядром и входными данными в каждой позиции. Размерность ядра фильтра выбирают обычно квадратной формы с нечетным количеством элементов вдоль осей матрицы: 3, 5, 7 и т.д. Результатом операции свертки в каждой позиции является одно число, которое показывает, насколько хорошо ядро ​​соответствует входным данным в этой позиции. Например, мы имеем фильтр размерностью 2 x 2 (матрица k) и он делает проекцию на исходное изображение, которая тоже имеет размерность 2 x 2 (матрица n), тогда значение выходного слоя вычисляется следующим образом:

Эта операция называется скалярным произведением
Результат операции свертки часто называют картой объектов, представляющей собой представление входных данных, в котором выделяются определенные функции, важные для рассматриваемой задачи. Принцип формирования выходного сверточного слоя:

Рис. 2. Процесс формирования выходного сверточного слоя
Размерность выходного сверточного слоя:

Каждое ядро ​​может научиться обнаруживать разные функции во входных данных. Например, ядро ​​может научиться обнаруживать края или углы изображения. Сверточный слой обычно имеет несколько ядер, каждое из которых учится обнаруживать разные функции во входных данных. Выходные данные всех ядер складываются для создания трехмерного тензора, который является выходным сигналом сверточного слоя. Размер выходного тензора зависит от размера входного тензора, размера ядер, шага (т. е. расстояния, которое ядро ​​перемещает между каждым вычислением) и заполнения (т. входного тензора). Выходной тензор часто меньше входного тензора, поэтому слои объединения часто используются для уменьшения размерности карт объектов. В целом, сверточный слой является ключевым компонентом сверточных нейронных сетей и позволяет сети изучать и извлекать признаки из входных данных способом, устойчивым к перемещению, вращению и масштабированию. 

В языке Python сверточный слой кодируется следующим образом:
tf.keras.layers.Conv2D(
    filters,
    kernel_size,
    strides=(1, 1),
    padding="valid",
    data_format=None,
    dilation_rate=(1, 1),
    groups=1,
    activation=None,
    use_bias=True,
    kernel_initializer="glorot_uniform",
    bias_initializer="zeros",
    kernel_regularizer=None,
    bias_regularizer=None,
    activity_regularizer=None,
    kernel_constraint=None,
    bias_constraint=None,
    **kwargs
)
Разберём подробно самые важные параметры сверточного слоя:
filters – параметр, задающий глубину тензора. Это значит, что ядро свертки “пройдется” по всему изображению некоторое число раз и составит свою выходную карту признаков.  Эта карта имеет вид одномерного вектора с числом признаков filters. Все эти векторы объединяются в выходной тензор слоя. При этом ядра свертки не определяются человеком заранее, они формируются самостоятельно во время обучения методом обратного распространения ошибки.
kernel_size – размер ядра свертки, который ‘скользит’ пиксель за пикселем по исследуемому тензору. Обычно квадратная матрица, но можно, передав кортеж, задать прямоугольную
strides – шаг свертки. По умолчанию равен единице. Мы можем присвоить этому параметру либо одно целое число – шаг одинаков и по ширине, и по высоте, либо кортеж, в котором указать разные шаги свертки по ширине и высоте
padding – заполнение. Данный параметр используется во избежание эффекта границ. Рассмотрим карту признаков 5 x 5. Существует лишь 9 позиций, куда может поместиться ядро свертки 3 х 3. Следовательно, карта выходных признаков также будет иметь размер 3 х 3:

Рис 3. Карта входных и выходных признаков без дополнения
Чтобы получить выходную карту признаков с теми же пространственными размерами, что и входная карта, можно использовать дополнение (padding). Дополнение заключается в добавлении соответствующего количества строк и столбцов с каждой стороны входной карты признаков, чтобы можно было поместить центр окна свертки в каждую входную клетку. Для окна 3 × 3 нужно добавить один столбец справа, один столбец слева, одну строку сверху и одну строку снизу. Для окна 5 × 5 нужно добавить две строки:

Рис 4. Карта входных и выходных признаков с дополнением

Таким образом, при значении параметра padding = ‘value’ (значение по умолчанию), карта признаков остается исходной. При значении padding = ‘same’ выходная карта признаков дополняется таким образом, чтобы её размерность совпадала с входной картой.
activation – функция активации, которая используется для преобразования выходных данных. 
3.2.2 Слой активации
Слой активации, также известный как функция активации, является важным компонентом нейронных сетей. Это нелинейная функция, которая применяется к выходу каждого нейрона в слое нейронной сети. Цель слоя активации — ввести нелинейность в нейронную сеть, что позволяет ей моделировать сложные нелинейные отношения между входами и выходами. Существует множество различных типов функций активации, каждый из которых имеет свои сильные и слабые стороны. Однако все функции активации имеют некоторые общие принципы. 
Первый принцип активационного слоя состоит в том, что он должен быть дифференцируемым. Это связано с тем, что обратное распространение, алгоритм, используемый для обучения нейронных сетей, основан на способности вычислять градиенты функции потерь по отношению к весам и смещениям в сети. Если функция активации не дифференцируема, то нельзя использовать обратное распространение для обновления весов и смещений, что делает невозможным обучение сети. 
Второй принцип активационного слоя заключается в том, что он должен иметь возможность насыщаться. Насыщение относится к явлению, когда выход функции активации застревает на определенном значении даже при изменении входа. Если функция активации не насыщается, то выход нейрона может неограниченно расти, что затрудняет обучение сети. Однако если функция активации насыщается слишком сильно, то градиенты могут стать очень маленькими, что замедляет обучение. 
Третий принцип уровня активации заключается в том, что он должен быть вычислительно эффективным. Это важно, потому что нейронные сети могут иметь миллионы или даже миллиарды параметров, поэтому каждая операция должна быть максимально эффективной, чтобы свести к минимуму время обучения и использование памяти. 
Рассмотрим некоторые из наиболее часто используемых функций активации и то, как они воплощают эти принципы. 
1. Функция активации сигмоида: (sigmoid)
Сигмовидная функция активации определяется следующим уравнением: 
 
Эта функция сопоставляет любое входное значение с числом от 0 до 1, что делает ее полезной для задач, связанных с двоичной классификацией. Сигмоидная функция также дифференцируема, что делает ее совместимой с обратным распространением. Однако сигмоидная функция может страдать от насыщения. Когда входное значение очень велико или очень мало, выход сигмовидной функции приближается к 0 или 1 соответственно. Это означает, что градиенты в этих областях могут стать очень маленькими, что замедляет обучение. 
2. Функция активации ReLU: (relu)
Функция активации ReLU, сокращение от выпрямленной линейной единицы, определяется следующим уравнением: 
 
Эта функция просто возвращает входное значение, если оно положительное, и 0 в противном случае. Функция ReLU эффективна в вычислительном отношении, поскольку требует только простой операции сравнения. Функция ReLU также не страдает от насыщения так же, как сигмовидная функция. Однако он может страдать от проблемы, известной как проблема «умирающего ReLU», когда выход нейрона постоянно застревает на 0. Это может произойти, когда входное значение функции ReLU отрицательное, что приводит к тому, что градиент равен 0. и предотвращает обновление весов во время тренировки. Чтобы смягчить эту проблему, исследователи предложили варианты функции ReLU, такие как негерметичный ReLU и параметрический ReLU. 
3. Функция активации гиперболический тангенс: (tanh) 
Функция активации тангенса определяется следующим уравнением: 

Эта функция сопоставляет любое входное значение с числом от -1 до 1, что делает ее полезной для задач, связанных с классификацией более чем двух классов. Функция tanh также дифференцируема, что делает ее совместимой с обратным распространением. Функция тангенса страдает от той же проблемы насыщения, что и сигмовидная функция, но в меньшей степени. Это означает, что градиенты могут стать маленькими, но не такими маленькими, как с сигмовидной функцией. 
4. Функция активации Softmax: (softmax)
Функция активации softmax определяется следующим уравнением:
 
Эта функция сопоставляет любое входное значение с распределением вероятностей по нескольким выходным классам. Функция softmax часто используется в качестве конечной функции активации в нейронных сетях для задач классификации нескольких классов. Функция softmax вычислительно эффективна и дифференцируема. Он также не страдает от насыщения, как сигмоидная функция или функция гиперболического тангенса. 
В языке Python слой активации кодируется следующим образом:
tf.keras.layers.Activation(activation, **kwargs)

activation – параметр, задающий функцию активации

В заключение, активационный слой является важнейшим компонентом нейронных сетей, который вносит нелинейность в модель. Различные типы функций активации воплощают разные принципы, такие как дифференцируемость, насыщенность и вычислительная эффективность.

3.2.3 Слой подвыборки
Слой подвыборки уменьшает размер карт признаков, путем уменьшения количества пикселей их усреднением или выбором максимальных значений. Это помогает упростить и сжать информацию, содержащуюся в этих картах объектов, что позволяет быстрее и эффективнее обрабатывать данные. После того, как сверточный слой сгенерировал свой набор карт объектов, в дело включается слой подвыборки. Этот слой берет каждую карту объектов и делит ее на ряд неперекрывающихся прямоугольных областей, обычно называемых объединяющими областями или объединяющими окнами. Затем для каждой области объединения слой выводит максимальное значение, найденное в этой области. Это максимальное значение становится новым значением для этой конкретной области в выходных данных слоя подвыборки. Рассмотрим пример с изображением 4 х 4. Размер матрицы составляет 2 х 2, шаг матрицы равен двум:

Рис 5. Сокращение размера матрицы путем выбора максимального значения и пула
Процесс получения максимального значения в области объединения называется максимальным объединением и имеет ряд важных преимуществ. Во-первых, это помогает уменьшить пространственное разрешение карт объектов, что может помочь предотвратить переоснащение и повысить эффективность последующих слоев в сети. Кроме того, это помогает создать форму инвариантности перевода, а это означает, что точное расположение конкретной функции на изображении становится менее важным. Чтобы понять, как максимальное объединение помогает создать инвариантность перевода, рассмотрим следующий пример. Представим, что конкретный объект расположен в верхнем левом углу входного изображения. Если бы CNN использовала только сверточные слои и не включала бы какие-либо слои субдискретизации, то эта функция активировалась бы только в том случае, если бы она появлялась в верхнем левом углу любых последующих изображений, обрабатываемых сетью. Однако, если в сеть включен слой максимального пула, то точное местоположение объекта становится менее важным. Пока функция присутствует где-то в области объединения, сеть распознает ее и извлечет ее максимальное значение. 
Существует ряд различных гиперпараметров, которые можно настроить в слое подвыборки. Во-первых, это размер окна пула. Общие размеры включают 2x2, 3x3 и 4x4, хотя технически можно использовать любой размер. Чем больше окно объединения, тем выше степень субдискретизации. Однако большие окна пула также могут привести к потере большего количества информации, поэтому необходимо учитывать компромисс. Другим гиперпараметром является шаг, который определяет размер шага, который принимает окно пула при перемещении по карте объектов. Шаг 1 означает, что окно объединения перемещается на один пиксель за раз, а шаг 2 означает, что оно перемещается на два пикселя за раз и так далее. Больший шаг приводит к более агрессивной подвыборке, поскольку учитывается меньше областей объединения. Однако слишком большой шаг может привести к потере важной информации. Наконец, слой подвыборки также может включать параметры заполнения. Заполнение включает в себя добавление дополнительных пикселей по краям карты объектов, что может помочь гарантировать, что края изображения правильно захватываются окнами объединения. Существует два основных типа отступов: действительный отступ, который не требует дополнительных отступов, и такой же отступ, который добавляет достаточно отступов, чтобы гарантировать, что выходная карта объектов имеет те же пространственные размеры, что и входная карта объектов. Таким образом, уровень субдискретизации слоя подвыборки является важным компонентом многих CNN. Его основная цель — уменьшить пространственное разрешение карт объектов, созданных сверточными слоями, что может помочь предотвратить переоснащение и повысить эффективность более поздних слоев. Слой достигает этого, разделяя каждую карту объектов на серию объединенных окон и выводя максимальное значение, найденное в каждом окне. Это помогает создать форму инвариантности перевода и может помочь упростить информацию, содержащуюся в картах объектов. Настраивая гиперпараметры данного слоя, разработчики CNN могут контролировать степень субдискретизации и адаптировать слой к своим